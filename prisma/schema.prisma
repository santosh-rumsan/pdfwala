// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ++++++++++++++++++ START: @rumsan/user - User +++++++++++++++++++++++++++++++

// =================== User Module ==================
model User {
  id     Int     @id @default(autoincrement())
  uuid   String  @unique @default(uuid())
  name   String?
  gender Gender  @default(UNKNOWN)
  email  String?
  phone  String?
  wallet String?
  extras Json?   @db.JsonB()

  Auth     Auth[]
  UserRole UserRole[]

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()
  deletedAt DateTime?
  createdBy Int?
  updatedBy Int?

  @@map("tbl_users")
}

enum Gender {
  MALE
  FEMALE
  OTHER
  UNKNOWN
}

// =================== Role Module ==================
model Role {
  id       Int       @unique @default(autoincrement())
  name     String    @unique @db.VarChar()
  isSystem Boolean   @default(false)
  expiry   DateTime?

  Permission Permission[]
  UserRole   UserRole[]

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()
  createdBy Int?
  updatedBy Int?

  @@map("tbl_auth_roles")
}

model Permission {
  id         Int     @unique @default(autoincrement())
  roleId     Int
  action     String  @db.VarChar()
  subject    String  @db.VarChar()
  inverted   Boolean @default(false)
  conditions Json?   @db.JsonB()
  reason     String? @db.Text()

  Role Role @relation(fields: [roleId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()

  @@map("tbl_auth_permissions")
}

model UserRole {
  id     Int       @id @default(autoincrement())
  userId Int
  roleId Int
  expiry DateTime?

  User User @relation(fields: [userId], references: [id])
  Role Role @relation(fields: [roleId], references: [id])

  createdAt DateTime @default(now())
  createdBy Int?

  @@unique([userId, roleId], name: "userRoleIdentifier")
  @@map("tbl_users_roles")
}

// =================== Auth Module ==================
model Auth {
  id            Int       @id @default(autoincrement())
  userId        Int
  service       Service
  serviceId     String
  details       Json?     @db.JsonB()
  challenge     String?
  falseAttempts Int       @default(0)
  isLocked      Boolean   @default(false)
  lockedOnAt    DateTime?
  lastLoginAt   DateTime?

  User    User          @relation(fields: [userId], references: [id])
  AuthLog AuthSession[]

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()

  @@unique([service, serviceId], name: "authIdentifier")
  @@map("tbl_auth")
}

model AuthSession {
  id        Int     @id @default(autoincrement())
  clientId  String
  sessionId String  @unique @default(uuid())
  authId    Int
  ip        String?
  details   Json?   @db.JsonB()
  userAgent String?

  Auth Auth @relation(fields: [authId], references: [id])

  createdAt DateTime @default(now())

  @@map("tbl_auth_sessions")
}

enum Service {
  EMAIL
  PHONE
  WALLET
  GOOGLE
  APPLE
  FACEBOOK
  TWITTER
  GITHUB
  LINKEDIN
}

// ++++++++++++++++++ END: @rumsan/user - Role/Auth ++++++++++++++++++++++++
// ++++++++++++++++++ START: @rumsan/settings +++++++++++++++++++++++++++

model Setting {
  name           String          @id @unique
  value          Json
  dataType       SettingDataType
  requiredFields String[]
  isReadOnly     Boolean         @default(false)
  isPrivate      Boolean         @default(true)

  @@map("tbl_settings")
}

enum SettingDataType {
  STRING
  NUMBER
  BOOLEAN
  OBJECT
}

// ++++++++++++++++++ END: @rumsan/settings +++++++++++++++++++++++++++

// ++++++++++++++++++ START: @rumsan/pdfwala +++++++++++++++++++++++++++

model PdfTemplates {
  name     String   @id @unique
  template Json[]
  fonts    String[]
  images   String[]

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()
  createdBy Int?
  updatedBy Int?

  @@map("tbl_pdf_templates")
}

// ++++++++++++++++++ END: @rumsan/pdfwala +++++++++++++++++++++++++++
